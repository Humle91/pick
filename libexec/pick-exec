#!/usr/bin/env bash
#
# Summary: 
#
# Usage: pick exec [options] [miner [version]] [--] [miner_options ...]
#
# Examples:
#
#   $ pick exec # Start the current selected miner in foreground
#   $ pick exec sgminer 4.1.0 # Start a specific miner in foreground
#   $ pick exec cgminer 3.7.2 --api-network # Start with options passed to miner
#   $ pick exec -- --api-listen # Start current miner with additional options 

set -e
[ -n "$PICK_DEBUG" ] && set -x

expand_version() {
  local flavor="${1%%-*}"
  local file="$PICK_ROOT/plugins/miner-install/share/miner-install/$flavor/versions.txt"
  [ ! -f "$file" ] && return

  local key="${1#*-}"
  if [ "$key" = "$flavor" ]; then
    local key="stable"
  fi

  local pair="$(grep -E "^$key:" "$file")"
  echo "$flavor-$(echo "${pair##$key:*([[:space:]])}" | awk '{print $2}')"
}

detect_miner_version() {
  local q="$1"
  [ ! -z "$2" ] && q+="-$2"
  
  if [ -z "$q" ]; then
    q="current"
  fi

  if [ "$q" = "current" ]; then
    local query=$(pick-version)
  elif [ ! -d "$PICK_ROOT/versions/$q" ]; then
    local query="$(expand_version "$q")"
  fi

  miner="${query%%-*}"
  miner_version="${query#*-}"
  miner_bin="$PICK_ROOT/versions/$miner-$miner_version/bin/$miner"

  if [ -z "$miner" ] || [ -z "$miner_version" ]; then
    echo "pick: unrecognized miner \`$q'" >&2
    exit 1
  fi
}

parse_options() {
  if [ -z "$1" ]; then
    local argv=(current)
  elif [[ "$1" =~ ^- ]]; then
    local argv=()
  else
    local argv=($1)
    shift
  fi
  
  if [[ "$1" =~ ^[^-] ]]; then
    argv+=($1)
    shift
  fi

  miner_options=("$@")
  
  detect_miner_version "${argv[@]}"

  command=$(echo "$miner ${miner_options[@]}" | xargs)
}

parse_options "$@"


if [ -x "$miner_bin" ]; then
  export PATH="$PICK_ROOT/versions/$miner-$miner_version/bin:$PATH"
else
  echo "pick: $miner $miner_version not installed" >&2
  exit 1
fi

echo "=> Booting $miner $miner_version with \`$command'"
$command
