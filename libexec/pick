#!/usr/bin/env bash

set -e
export -n CDPATH

if [ "$1" = "--debug" ]; then
  export PICK_DEBUG=1
  shift
fi

if [ -n "$PICK_DEBUG" ]; then
  export PS4='+ [${BASH_SOURCE##*/}:${LINENO}] '
  set -x
fi

READLINK=$(type -p greadlink readlink | head -1)
if [ -z "$READLINK" ]; then
  echo "pick: cannot find readlink - are you missing GNU coreutils?" >&2
  exit 1
fi

resolve_link() {
  $READLINK "$@"
}

abs_dirname() {
  local cwd="$(pwd)"
  local path="$1"

  while [ -n "$path" ]; do
    cd "${path%/*}"
    local name="${path##*/}"
    path="$(resolve_link "$name" || true)"
  done

  pwd
  cd "$cwd"
}

if [ -z "$PICK_ROOT" ]; then
  PICK_ROOT="$(resolve_link -f "$(dirname $0)/../")"
fi
export PICK_ROOT

cd "$PICK_ROOT" 2>/dev/null || {
  echo "pick: cannot change working directory to \`$PICK_ROOT'"
}

bin_path="$(abs_dirname "$0")"
for plugin_bin in "$PICK_ROOT/plugins/"*/bin; do
  bin_path="${bin_path}:${plugin_bin}"
done
export PATH="$bin_path:$PATH"

command="$1"
case "$command" in
"" | "-h" | "--help" )
  echo -e "$(pick---version)\n$(pick-help)" >&2
  ;;
"-v" )
  exec pick---version
  ;;
* )
  command_path="$(command -v "pick-$command" || true)"
  if [ -z "$command_path" ]; then
    echo "pick: no such command \`$command'" >&2
    exit 1
  fi

  shift 1
  exec "$command_path" "$@"
  ;;
esac
